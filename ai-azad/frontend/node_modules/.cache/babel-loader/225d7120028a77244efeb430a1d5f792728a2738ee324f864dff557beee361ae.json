{"ast":null,"code":"var _jsxFileName = \"H:\\\\python\\\\azad5\\\\uplod\\\\azad5\\\\ai-azad\\\\frontend\\\\src\\\\components\\\\OCRComponent.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/OCRComponent.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRComponent = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [text, setText] = useState('');\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await axios.post('http://backend:5000/extract-text', formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setText(res.data.text);\n    } catch (error) {\n      console.error('Error extracting text:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ocr-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OCR Document Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0]),\n        required: true,\n        className: \"form-control mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary w-100\",\n        children: \"Upload and Extract Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), text && /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"mt-3\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(OCRComponent, \"+81Yz4WIwXmauHdQRHDGlTThkiQ=\");\n_c = OCRComponent;\nexport default OCRComponent;\nvar _c;\n$RefreshReg$(_c, \"OCRComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OCRComponent","_s","file","setFile","text","setText","handleUpload","e","preventDefault","formData","FormData","append","res","post","headers","Authorization","localStorage","getItem","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","files","required","_c","$RefreshReg$"],"sources":["H:/python/azad5/uplod/azad5/ai-azad/frontend/src/components/OCRComponent.js"],"sourcesContent":["// frontend/src/components/OCRComponent.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst OCRComponent = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [text, setText] = useState('');\r\n\r\n    const handleUpload = async (e) => {\r\n        e.preventDefault();\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const res = await axios.post('http://backend:5000/extract-text', formData, {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}`, 'Content-Type': 'multipart/form-data' }\r\n            });\r\n            setText(res.data.text);\r\n        } catch (error) {\r\n            console.error('Error extracting text:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"ocr-container\">\r\n            <h2>OCR Document Upload</h2>\r\n            <form onSubmit={handleUpload}>\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                    required\r\n                    className=\"form-control mb-3\"\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-primary w-100\">Upload and Extract Text</button>\r\n            </form>\r\n            {text && <pre className=\"mt-3\">{text}</pre>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OCRComponent;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,EAAE;IAEX,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAE7B,IAAI;MACA,MAAMU,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,kCAAkC,EAAEJ,QAAQ,EAAE;QACvEK,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UAAE,cAAc,EAAE;QAAsB;MAC/G,CAAC,CAAC;MACFZ,OAAO,CAACO,GAAG,CAACM,IAAI,CAACd,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIpB,OAAA;IAAKsB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BvB,OAAA;MAAAuB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B3B,OAAA;MAAM4B,QAAQ,EAAErB,YAAa;MAAAgB,QAAA,gBACzBvB,OAAA;QACI6B,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAGtB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACuB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;QAC5CC,QAAQ;QACRX,SAAS,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACF3B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC,EACNtB,IAAI,iBAAIL,OAAA;MAAKsB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAElB;IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd,CAAC;AAACzB,EAAA,CApCID,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}